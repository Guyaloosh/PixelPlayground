@model IEnumerable<Product>

@{
    var sortedProducts = Model.OrderBy(p => p.Position);
}

<img src="~/Images/mainindexwallpaper.jpg" alt="GamingWallpaper" class="mx-auto" style="width: 100%; position: relative; margin-top: -2px; height: 220px; object-fit: cover" />
<div class="d-flex mt-[-12] p-2 mx-2 mt-4">
    <div class="card mb-12" style="border-right: 1px solid grey; margin-right: 32px">
        <div class="card-body rounded" style="color: #325D88;">
            <!-- Search bar -->
            <div class="mb-3">
                <input type="text" class="form-control" id="searchInput" placeholder="Search products">
            </div>
            <!-- Category filter -->
            <h5>Categories</h5>
            @foreach (var category in ViewBag.Categories)
            {
                <div class="form-check">
                    <input class="form-check-input categoryCheckbox" type="checkbox" value="@category.Name" id="category-@category.Id">
                    <label class="form-check-label" for="category-@category.Id">
                        @category.Name
                    </label>
                </div>
            }
            <hr>
            <!-- Price range filter -->
            <h5>Price Range</h5>
            <div class="mb-3">
                <label for="minPrice">Min Price</label>
                <input type="number" class="form-control" id="minPrice" placeholder="Min Price">
            </div>
            <div class="mb-3">
                <label for="maxPrice">Max Price</label>
                <input type="number" class="form-control" id="maxPrice" placeholder="Max Price">
            </div>
            <!-- On Sale filter -->
            <div class="form-check">
                <input class="form-check-input" type="checkbox" value="" id="onSaleCheckbox">
                <label class="form-check-label" for="onSaleCheckbox">
                    ON SALE
                </label>
            </div>
        </div>
    </div>


    <div class="container .d-inline-flex">
        <!-- Product List -->
        <!-- Sort Bar -->
        <div class="col-sm-6 mb-2">
            <div class="btn-group float-right" role="group">
                <button id="sortByPriceHigh" type="button" class="btn" style="color: #89D">Price High to Low</button>
                <button id="sortByPriceLow" type="button" class="btn" style="color: #89D">Price Low to High</button>
                <button id="sortByPopularity" type="button" class="btn" style="color: #89D">Popularity</button>
                <button id="sortBySold" type="button" class="btn" style="color: #89D">Best Sellers</button>
                <button id="sortByCategory" type="button" class="btn" style="color: #89D">Category</button>

            </div>
        </div>
        <div class="row">

            <div class="col-md-12">
                <div class="main">
                    <div class="row pb-3" id="productList">
                        @foreach (var product in sortedProducts)
                        {
                            <div class="col-lg-3 col-md-6 col-sm-12 product pb-4" data-category-name="@product.Category.Name" data-price="@product.Price">
                                <div class="row justify-content-between">
                                    <div class="col-12">
                                        <div class="card p-3 my-shadow-md rounded-2" style="height: 400px;">
                                            @if (product.RealishDate > DateTime.Now)
                                            {
                                                <div class="text-center text-primary">
                                                    <p>Coming Soon</p>
                                                </div>
                                            }
                                            else if (product.Quantity == 0)
                                            {
                                                <div class="text-center text-danger">
                                                    <p>Out of stock</p>
                                                </div>
                                            }
                                            <img src="@product.ImageUrl" alt="@product.Title" class="mx-auto rounded my-shadow-sm" style="width: 100%; height: 200px; object-fit: fill" />
                                            <div class="" style="height: auto;">
                                                <div class="mt-2 pl-1">
                                                    <p class="card-title h5 text-dark opacity-75 text-center">@product.Title</p>
                                                    <p class="card-title text-warning text-center"><b>@product.Maker</b></p>
                                                    <p class="card-title text-warning text-center"><b>@product.Category.Name</b></p>
                                                    <p class="card-title text-warning text-center"><b>@product.RealishDate.Month/@product.RealishDate.Year</b></p>
                                                </div>
                                                <div class="pl-1">
                                                    @if (product.PublishPrice > product.Price)
                                                    {
                                                        <p class="text-dark h5 text-dark opacity-75 text-center">Price: <del>@product.PublishPrice.ToString("c")</del></p>
                                                        <p class="text-dark h5 text-dark opacity-75 text-center">NOW only!: <span>@product.Price.ToString("c")</span></p>
                                                    }
                                                    else
                                                    {
                                                        <p class="text-dark h5 text-dark opacity-75 text-center">Price:<span>@product.Price.ToString("c")</span></p>
                                                    }
                                                </div>
                                            </div>
                                            @if (product.RealishDate > DateTime.Now)
                                            {
                                                <button onclick="addToWishList('@product.Title')" class="btn btn-danger form-control">
                                                    Notify when in stock
                                                </button>

                                            }
                                            else
                                            {
                                                @if (product.Quantity == 0)
                                                {
                                                    <button onclick="addToWishList('@product.Title')" class="btn btn-danger form-control">
                                                        Notify when in stock
                                                    </button>
                                                    <a id="detailsBtn" asp-action="Details" asp-route-productId="@product.Id" class="btn btn-primary bg-gradient border-0">
                                                        Show More Details
                                                    </a>
                                                }
                                                else
                                                {

                                                    <a asp-action="AddToCart" asp-route-productId="@product.Id" class="btn btn-success">
                                                        Add to Cart
                                                    </a>
                                                    <a asp-action="Details" asp-route-productId="@product.Id" class="btn btn-primary bg-gradient border-0">
                                                        Show More Details
                                                    </a>
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        function addToWishList(title) {
            Swal.fire({
                title: title + " has been added to wish list!",
                text: "We'll contact you as soon as it is available",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonText: "Undo",
                cancelButtonColor: "#d
            }).then((result) => {
                if (result.isConfirmed) {
                    // Handle confirmed action
                };
            })
        }

        $(document).ready(function () {
            // Function to fetch sorted products using AJAX
            function fetchSortedProducts(sortType) {
                $.ajax({
                    url: '@Url.Action("SortProducts", "Home")',
                    type: 'GET',
                    data: { sortType: sortType },
                    success: function (result) {
                        $('#productList').html(result);
                    },
                    error: function (xhr, status, error) {
                        console.error(xhr.responseText);
                    }
                });
            }
            var isClicked = ""; // Variable to track which button is clicked

            $("#sortByPriceHigh").click(function () {
                fetchSortedProducts("PriceHighToLow");
                if (isClicked === "sortByPriceHigh") {
                    resetButtonStyles();
                    isClicked = "";
                    fetchSortedProducts("")
                } else {
                    resetButtonStyles();
                    document.getElementById("sortByPriceHigh").style.backgroundColor = "#325D88";
                    isClicked = "sortByPriceHigh";
                    fetchSortedProducts("")
                }
            });

            $("#sortByPriceLow").click(function () {
                fetchSortedProducts("PriceLowToHigh");
                if (isClicked === "sortByPriceLow") {
                    resetButtonStyles();
                    isClicked = "";
                    fetchSortedProducts("")
                } else {
                    resetButtonStyles();
                    document.getElementById("sortByPriceLow").style.backgroundColor = "#325D88";
                    isClicked = "sortByPriceLow";
                    fetchSortedProducts("")
                }
            });

            $("#sortByPopularity").click(function () {
                fetchSortedProducts("Popularity");
                if (isClicked === "sortByPopularity") {
                    resetButtonStyles();
                    isClicked = "";
                    fetchSortedProducts("")
                } else {
                    resetButtonStyles();
                    document.getElementById("sortByPopularity").style.backgroundColor = "#325D88";
                    isClicked = "sortByPopularity";
                    fetchSortedProducts("")
                }
            });

            $("#sortByCategory").click(function () {
                fetchSortedProducts("Category");
                if (isClicked === "sortByCategory") {
                    resetButtonStyles();
                    isClicked = "";
                    fetchSortedProducts("")
                } else {
                    resetButtonStyles();
                    document.getElementById("sortByCategory").style.backgroundColor = "#325D88";
                    isClicked = "sortByCategory";
                    fetchSortedProducts("")
                }
            });

            $("#sortBySold").click(function () {
                fetchSortedProducts("MostSold");
                if (isClicked === "sortBySold") {
                    resetButtonStyles();
                    isClicked = "";
                    fetchSortedProducts("")
                } else {
                    resetButtonStyles();
                    document.getElementById("sortBySold").style.backgroundColor = "#325D88";
                    isClicked = "sortBySold";
                    fetchSortedProducts("")
                }
            });

            function resetButtonStyles() {
                document.getElementById("sortByPriceHigh").style.backgroundColor = "";
                document.getElementById("sortByPriceLow").style.backgroundColor = "";
                document.getElementById("sortByPopularity").style.backgroundColor = "";
                document.getElementById("sortByCategory").style.backgroundColor = "";
                document.getElementById("sortBySold").style.backgroundColor = "";
            }

            var isMostSoldClicked = false;

            $("#onSaleCheckbox").click(function () {
                isMostSoldClicked = $(this).is(":checked");
                if (isMostSoldClicked) {
                    fetchSortedProducts("onsale");
                } else {
                    fetchSortedProducts("");
                }
            });

            function filterProducts() {
                var searchText = $("#searchInput").val().toLowerCase();
                var selectedCategories = $(".categoryCheckbox:checked").map(function () {
                    return $(this).val().toLowerCase();
                }).get();
                var minPrice = parseFloat($("#minPrice").val()) || 0;
                var maxPrice = parseFloat($("#maxPrice").val()) || Number.MAX_VALUE;

                $(".product").each(function () {
                    var product = $(this);
                    var title = product.find(".card-title").text().toLowerCase();
                    var category = product.data('category-name').toLowerCase();
                    var price = parseFloat(product.data('price'));

                    var isCategoryMatch = selectedCategories.length === 0 || selectedCategories.includes(category);
                    var isTitleMatch = title.includes(searchText);
                    var isPriceMatch = (price >= minPrice && price <= maxPrice);

                    if (isCategoryMatch && isTitleMatch && isPriceMatch) {
                        product.show();
                    } else {
                        product.hide();
                    }
                });
            }

            $("#searchInput").on("keyup", filterProducts);
            $(".categoryCheckbox").on("change", filterProducts);
            $("#minPrice, #maxPrice").on("input", filterProducts);
        });
    </script>
}
