// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopWeb.Data;

#nullable disable

namespace ShopWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240406090724_youtube")]
    partial class youtube
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ShopWeb.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Racing"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 4,
                            DisplayOrder = 4,
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = 5,
                            DisplayOrder = 5,
                            Name = "Family"
                        },
                        new
                        {
                            Id = 6,
                            DisplayOrder = 6,
                            Name = "Music"
                        },
                        new
                        {
                            Id = 7,
                            DisplayOrder = 7,
                            Name = "FPS"
                        },
                        new
                        {
                            Id = 8,
                            DisplayOrder = 8,
                            Name = "Multiplayer"
                        },
                        new
                        {
                            Id = 9,
                            DisplayOrder = 9,
                            Name = "OpenWorld"
                        },
                        new
                        {
                            Id = 10,
                            DisplayOrder = 10,
                            Name = "Puzzle"
                        },
                        new
                        {
                            Id = 11,
                            DisplayOrder = 11,
                            Name = "History"
                        },
                        new
                        {
                            Id = 12,
                            DisplayOrder = 12,
                            Name = "Horror"
                        });
                });

            modelBuilder.Entity("ShopWeb.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("OrderHeaderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderHeaderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("ShopWeb.Models.OrderHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Carrier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("PaymentDueDate")
                        .HasColumnType("date");

                    b.Property<string>("PaymentIntentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ShippingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrackingNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("OrderHeaders");
                });

            modelBuilder.Entity("ShopWeb.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Maker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MinAge")
                        .HasColumnType("int");

                    b.Property<int>("Popularity")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PublishPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("RealishDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Sold")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrailerLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("onSale")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Action RPG set in a fantasy world.",
                            ImageUrl = "/Images/DefGameImages/1.jpg",
                            Maker = "CD Projekt Red",
                            MinAge = 17,
                            Popularity = 95,
                            Position = 1,
                            Price = 29.99m,
                            PublishPrice = 49.99m,
                            Quantity = 80,
                            RealishDate = new DateTime(2015, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 152,
                            Title = "The Witcher 3: Wild Hunt",
                            onSale = true
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 9,
                            Description = "Open-world action-adventure game.",
                            ImageUrl = "/Images/DefGameImages/2.jpg",
                            Maker = "Rockstar Games",
                            MinAge = 17,
                            Popularity = 96,
                            Position = 2,
                            Price = 39.99m,
                            PublishPrice = 59.99m,
                            Quantity = 45,
                            RealishDate = new DateTime(2018, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 287,
                            Title = "Red Dead Redemption 2",
                            onSale = true
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Open-world action RPG set in a dystopian future.",
                            ImageUrl = "/Images/DefGameImages/3.jpg",
                            Maker = "CD Projekt Red",
                            MinAge = 18,
                            Popularity = 90,
                            Position = 3,
                            Price = 49.99m,
                            PublishPrice = 59.99m,
                            Quantity = 34,
                            RealishDate = new DateTime(2020, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 130,
                            Title = "Cyberpunk 2077",
                            onSale = false
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "Action-adventure game set in a fictional version of Southern California.",
                            ImageUrl = "/Images/DefGameImages/4.jpg",
                            Maker = "Rockstar Games",
                            MinAge = 18,
                            Popularity = 97,
                            Position = 4,
                            Price = 29.99m,
                            PublishPrice = 59.99m,
                            Quantity = 25,
                            RealishDate = new DateTime(2013, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 140,
                            Title = "Grand Theft Auto V",
                            onSale = false
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 8,
                            Description = "Battle Royale game with building mechanics.",
                            ImageUrl = "/Images/DefGameImages/5.jpg",
                            Maker = "Epic Games",
                            MinAge = 13,
                            Popularity = 98,
                            Position = 5,
                            Price = 19.99m,
                            PublishPrice = 0m,
                            Quantity = 75,
                            RealishDate = new DateTime(2017, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 350,
                            Title = "Fortnite",
                            onSale = false
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 8,
                            Description = "Multiplayer online battle royale game.",
                            ImageUrl = "/Images/DefGameImages/6.jpg",
                            Maker = "PUBG Corporation",
                            MinAge = 16,
                            Popularity = 92,
                            Position = 6,
                            Price = 29.99m,
                            PublishPrice = 39.99m,
                            Quantity = 35,
                            RealishDate = new DateTime(2017, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 70,
                            Title = "PlayerUnknown's Battlegrounds (PUBG)",
                            onSale = false
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 7,
                            Description = "First-person shooter video game set in the modern world.",
                            ImageUrl = "/Images/DefGameImages/7.jpg",
                            Maker = "Activision",
                            MinAge = 17,
                            Popularity = 90,
                            Position = 7,
                            Price = 59.99m,
                            PublishPrice = 59.99m,
                            Quantity = 42,
                            RealishDate = new DateTime(2019, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 30,
                            Title = "Call of Duty: Modern Warfare",
                            onSale = true
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 8,
                            Description = "Battle Royale game mode within the Call of Duty: Modern Warfare universe.",
                            ImageUrl = "/Images/DefGameImages/8.jpg",
                            Maker = "Activision",
                            MinAge = 17,
                            Popularity = 92,
                            Position = 8,
                            Price = 19.99m,
                            PublishPrice = 29.99m,
                            Quantity = 13,
                            RealishDate = new DateTime(2020, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 80,
                            Title = "Call of Duty: Warzone",
                            onSale = false
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 7,
                            Description = "Free-to-play battle royale game set in the Titanfall universe.",
                            ImageUrl = "/Images/DefGameImages/9.jpg",
                            Maker = "Respawn Entertainment",
                            MinAge = 13,
                            Popularity = 95,
                            Position = 9,
                            Price = 19.99m,
                            PublishPrice = 29.99m,
                            Quantity = 28,
                            RealishDate = new DateTime(2019, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 100,
                            Title = "Apex Legends",
                            onSale = false
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 4,
                            Description = "Team-based multiplayer first-person shooter game.",
                            ImageUrl = "/Images/DefGameImages/10.jpg",
                            Maker = "Blizzard Entertainment",
                            MinAge = 13,
                            Popularity = 92,
                            Position = 10,
                            Price = 39.99m,
                            PublishPrice = 59.99m,
                            Quantity = 35,
                            RealishDate = new DateTime(2016, 5, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 54,
                            Title = "Overwatch",
                            onSale = false
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 9,
                            Description = "Sandbox video game where players build with various cubes in a 3D procedurally generated world.",
                            ImageUrl = "/Images/DefGameImages/11.jpg",
                            Maker = "Mojang Studios",
                            MinAge = 10,
                            Popularity = 96,
                            Position = 11,
                            Price = 26.95m,
                            PublishPrice = 26.95m,
                            Quantity = 85,
                            RealishDate = new DateTime(2011, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 20,
                            Title = "Minecraft",
                            onSale = false
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 7,
                            Description = "Free-to-play multiplayer tactical first-person shooter.",
                            ImageUrl = "/Images/DefGameImages/12.jpg",
                            Maker = "Riot Games",
                            MinAge = 13,
                            Popularity = 93,
                            Position = 12,
                            Price = 0m,
                            PublishPrice = 39.99m,
                            Quantity = 15,
                            RealishDate = new DateTime(2020, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 10,
                            Title = "Valorant",
                            onSale = true
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 5,
                            Description = "Online multiplayer social deduction game.",
                            ImageUrl = "/Images/DefGameImages/13.jpg",
                            Maker = "InnerSloth",
                            MinAge = 10,
                            Popularity = 97,
                            Position = 13,
                            Price = 4.99m,
                            PublishPrice = 4.99m,
                            Quantity = 15,
                            RealishDate = new DateTime(2018, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 50,
                            Title = "Among Us",
                            onSale = false
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 5,
                            Description = "Multiplayer party game with up to 60 players online.",
                            ImageUrl = "/Images/DefGameImages/14.jpg",
                            Maker = "Mediatonic",
                            MinAge = 10,
                            Popularity = 95,
                            Position = 14,
                            Price = 19.99m,
                            PublishPrice = 19.99m,
                            Quantity = 25,
                            RealishDate = new DateTime(2020, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 200,
                            Title = "Fall Guys: Ultimate Knockout",
                            onSale = false
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 1,
                            Description = "Action role-playing game set in the fictional province of Skyrim.",
                            ImageUrl = "/Images/DefGameImages/15.jpg",
                            Maker = "Bethesda Game Studios",
                            MinAge = 17,
                            Popularity = 97,
                            Position = 15,
                            Price = 19.99m,
                            PublishPrice = 39.99m,
                            Quantity = 34,
                            RealishDate = new DateTime(2011, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 30,
                            Title = "The Elder Scrolls V: Skyrim",
                            onSale = false
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 2,
                            Description = "Vehicular soccer video game.",
                            ImageUrl = "/Images/DefGameImages/16.jpg",
                            Maker = "Psyonix",
                            MinAge = 3,
                            Popularity = 93,
                            Position = 16,
                            Price = 19.99m,
                            PublishPrice = 19.99m,
                            Quantity = 82,
                            RealishDate = new DateTime(2015, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 75,
                            Title = "Rocket League",
                            onSale = false
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 9,
                            Description = "Action role-playing video game set in ancient Greece.",
                            ImageUrl = "/Images/DefGameImages/17.jpg",
                            Maker = "Ubisoft",
                            MinAge = 17,
                            Popularity = 91,
                            Position = 17,
                            Price = 19.99m,
                            PublishPrice = 59.99m,
                            Quantity = 43,
                            RealishDate = new DateTime(2018, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 10,
                            Title = "Assassin's Creed Odyssey",
                            onSale = true
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 12,
                            Description = "First-person shooter video game developed by id Software.",
                            ImageUrl = "/Images/DefGameImages/18.jpg",
                            Maker = "Bethesda Softworks",
                            MinAge = 17,
                            Popularity = 94,
                            Position = 18,
                            Price = 29.99m,
                            PublishPrice = 59.99m,
                            Quantity = 35,
                            RealishDate = new DateTime(2020, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 30,
                            Title = "Doom Eternal",
                            onSale = false
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 8,
                            Description = "Action role-playing game set in an open world environment.",
                            ImageUrl = "/Images/DefGameImages/19.jpg",
                            Maker = "Capcom",
                            MinAge = 16,
                            Popularity = 90,
                            Position = 19,
                            Price = 39.99m,
                            PublishPrice = 59.99m,
                            Quantity = 70,
                            RealishDate = new DateTime(2018, 8, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 16,
                            Title = "Monster Hunter: World",
                            onSale = false
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 1,
                            Description = "Tactical shooter video game developed by Ubisoft Montreal.",
                            ImageUrl = "/Images/DefGameImages/20.jpg",
                            Maker = "Ubisoft",
                            MinAge = 18,
                            Popularity = 95,
                            Position = 20,
                            Price = 19.99m,
                            PublishPrice = 39.99m,
                            Quantity = 15,
                            RealishDate = new DateTime(2015, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 65,
                            Title = "Tom Clancy's Rainbow Six Siege",
                            onSale = false
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 8,
                            Description = "Action role-playing game set in an open world environment.",
                            ImageUrl = "/Images/DefGameImages/21.jpg",
                            Maker = "Square Enix",
                            MinAge = 16,
                            Popularity = 93,
                            Position = 21,
                            Price = 19.99m,
                            PublishPrice = 59.99m,
                            Quantity = 50,
                            RealishDate = new DateTime(2016, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 90,
                            Title = "Final Fantasy XV",
                            onSale = false
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 3,
                            Description = "Action game developed by Kojima Productions.",
                            ImageUrl = "/Images/DefGameImages/22.jpg",
                            Maker = "Sony Interactive Entertainment",
                            MinAge = 18,
                            Popularity = 91,
                            Position = 22,
                            Price = 29.99m,
                            PublishPrice = 59.99m,
                            Quantity = 42,
                            RealishDate = new DateTime(2019, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 60,
                            Title = "Death Stranding",
                            onSale = false
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 12,
                            Description = "Survival horror video game developed by Capcom.",
                            ImageUrl = "/Images/DefGameImages/23.jpg",
                            Maker = "Capcom",
                            MinAge = 18,
                            Popularity = 90,
                            Position = 23,
                            Price = 19.99m,
                            PublishPrice = 59.99m,
                            Quantity = 30,
                            RealishDate = new DateTime(2017, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 82,
                            Title = "Resident Evil 7: Biohazard",
                            onSale = false
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 1,
                            Description = "Action-adventure video game developed by FromSoftware.",
                            ImageUrl = "/Images/DefGameImages/24.jpg",
                            Maker = "Activision",
                            MinAge = 18,
                            Popularity = 94,
                            Position = 24,
                            Price = 29.99m,
                            PublishPrice = 59.99m,
                            Quantity = 27,
                            RealishDate = new DateTime(2019, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 50,
                            Title = "Sekiro: Shadows Die Twice",
                            onSale = true
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 10,
                            Description = "Action-adventure video game developed by Remedy Entertainment.",
                            ImageUrl = "/Images/DefGameImages/25.jpg",
                            Maker = "505 Games",
                            MinAge = 17,
                            Popularity = 91,
                            Position = 25,
                            Price = 29.99m,
                            PublishPrice = 59.99m,
                            Quantity = 50,
                            RealishDate = new DateTime(2019, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 20,
                            Title = "Control",
                            onSale = true
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 5,
                            Description = "Open-world action role-playing game.",
                            ImageUrl = "/Images/DefGameImages/26.jpg",
                            Maker = "miHoYo",
                            MinAge = 9,
                            Popularity = 95,
                            Position = 26,
                            Price = 0m,
                            PublishPrice = 0m,
                            Quantity = 13,
                            RealishDate = new DateTime(2020, 9, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 54,
                            Title = "Genshin Impact",
                            onSale = false
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 3,
                            Description = "Action-adventure game developed and published by Nintendo.",
                            ImageUrl = "/Images/DefGameImages/27.jpg",
                            Maker = "Nintendo",
                            MinAge = 10,
                            Popularity = 98,
                            Position = 27,
                            Price = 59.99m,
                            PublishPrice = 59.99m,
                            Quantity = 43,
                            RealishDate = new DateTime(2017, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 23,
                            Title = "The Legend of Zelda: Breath of the Wild",
                            onSale = false
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 3,
                            Description = "Action-adventure game developed by Respawn Entertainment.",
                            ImageUrl = "/Images/DefGameImages/28.jpg",
                            Maker = "Electronic Arts",
                            MinAge = 16,
                            Popularity = 94,
                            Position = 28,
                            Price = 29.99m,
                            PublishPrice = 59.99m,
                            Quantity = 25,
                            RealishDate = new DateTime(2019, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 11,
                            Title = "Star Wars Jedi: Fallen Order",
                            onSale = false
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 1,
                            Description = "Virtual reality first-person shooter game developed and published by Valve.",
                            ImageUrl = "/Images/DefGameImages/29.jpg",
                            Maker = "Valve",
                            MinAge = 16,
                            Popularity = 95,
                            Position = 29,
                            Price = 59.99m,
                            PublishPrice = 59.99m,
                            Quantity = 30,
                            RealishDate = new DateTime(2020, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 26,
                            Title = "Half-Life: Alyx",
                            onSale = false
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 6,
                            Description = "Dance with your swords! VR special!",
                            ImageUrl = "/Images/DefGameImages/30.jpg",
                            Maker = "VRworld",
                            MinAge = 18,
                            Popularity = 93,
                            Position = 30,
                            Price = 39.99m,
                            PublishPrice = 49.99m,
                            Quantity = 56,
                            RealishDate = new DateTime(2019, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 52,
                            Title = "BeatSaber",
                            onSale = false
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = 1,
                            Description = "Action-adventure game ,More details SOON!.",
                            ImageUrl = "/Images/DefGameImages/31.jpg",
                            Maker = "Rockstar Games",
                            MinAge = 18,
                            Popularity = 20000,
                            Position = 31,
                            Price = 300m,
                            PublishPrice = 300m,
                            Quantity = 0,
                            RealishDate = new DateTime(2026, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sold = 0,
                            Title = "Grand Theft Auto VI",
                            onSale = false
                        });
                });

            modelBuilder.Entity("ShopWeb.Models.ShoppingCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("ProductId");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("ShopWeb.Models.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAdress")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShopWeb.Models.OrderDetail", b =>
                {
                    b.HasOne("ShopWeb.Models.OrderHeader", "OrderHeader")
                        .WithMany()
                        .HasForeignKey("OrderHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopWeb.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderHeader");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ShopWeb.Models.OrderHeader", b =>
                {
                    b.HasOne("ShopWeb.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("ShopWeb.Models.Product", b =>
                {
                    b.HasOne("ShopWeb.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ShopWeb.Models.ShoppingCart", b =>
                {
                    b.HasOne("ShopWeb.Models.ApplicationUser", "applicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopWeb.Models.Product", "product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("applicationUser");

                    b.Navigation("product");
                });
#pragma warning restore 612, 618
        }
    }
}
